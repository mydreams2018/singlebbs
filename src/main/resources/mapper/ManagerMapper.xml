<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kungreat.singlebbs.mapper.ManagerMapper">

    <resultMap id="ResultPortMap" type="cn.kungreat.singlebbs.domain.Report">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="port_title" jdbcType="VARCHAR" property="name" />
        <result column="experience" jdbcType="TINYINT" property="experience" />
        <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
        <result column="is_essence" jdbcType="BIT" property="isEssence" />
        <result column="port_state" jdbcType="VARCHAR" property="portState" />
        <result column="is_top" jdbcType="BIT" property="isTop" />
        <result column="reply_number" jdbcType="TINYINT" property="replyNumber" />
        <result column="look_number" jdbcType="TINYINT" property="lookNumber" />
        <result column="create_time" jdbcType="DATE" property="createTime" />
        <result column="auth_flag" jdbcType="INTEGER" property="authFlag" />
        <result column="class_id" property="classId" />
        <result column="alias" jdbcType="VARCHAR" property="alias" />
        <result column="img" jdbcType="VARCHAR" property="userImg" />
        <result column="vip_level"  property="vipLevel"/>
        <result column="authenticate"  property="authenticate" />
        <result column="is_manager"  property="isManager" />
        <result column="partition_name"  property="partitionName" />
        <result column="auth_describe"  property="authDescribe" />
    </resultMap>

    <resultMap id="ResultDetailsMap" type="cn.kungreat.singlebbs.domain.DetailsText">
        <id column="id" property="id" />
        <result column="class_id" property="classId" />
        <result column="is_adoption" property="isAdoption" />
        <result column="like_number" property="likeNumber" />
        <result column="port_id" property="portId" />
        <result column="user_account" property="userAccount" />
        <result column="create_data" property="createData" />
        <result column="auth_flag" property="authFlag" />
        <result column="details_text" property="detailsText" />
        <result column="is_port" property="isPort" />
        <result column="reply_parent" property="replyParent" />
        <result column="like_account" property="likeAccount" />
        <result column="alias" jdbcType="VARCHAR" property="alias" />
        <result column="img" jdbcType="VARCHAR" property="userImg" />
        <result column="vip_level"  property="vipLevel"/>
        <result column="authenticate"  property="authenticate" />
        <result column="is_manager"  property="isManager" />
        <result column="auth_describe"  property="authDescribe" />
    </resultMap>

    <update id="updatePortAuth">
        update ${tableName}
        set auth_flag = ${authFlag}
        where id = #{id}
    </update>

    <update id="updatePortAuthDetails">
        update ${tableName}
        set auth_flag = ${authFlag}
        where port_id = #{portId} and is_port = 1
    </update>

    <update id="updateReplyPortAuth">
        update ${tableName}
        set auth_flag = ${authFlag}
        where id = #{id}
    </update>

    <update id="updatePortIsTop">
        update ${tableName}
        set is_top = ${isTop}
        where id = #{id}
    </update>

    <delete id="deleteUserPorts">
       update ${tableName} set auth_flag = #{authFlag} where user_account = #{userAccount}
    </delete>

    <delete id="deleteUserReplyPorts">
        update ${tableName} set auth_flag = #{authFlag} where user_account = #{userAccount}
    </delete>

    <select id="selectAuthPorts" resultType="java.lang.Integer">
    select sum(num) from
    (select count(id) as num from report_back where auth_flag=0
    union all
    select count(id) as num from report_data where auth_flag=0
    union all
    select count(id) as num from report_front where auth_flag=0
    union all
    select count(id) as num from report_talk where auth_flag=0) as AuthCount
  </select>

  <select id="selectAuthAnswerPorts" resultType="java.lang.Integer">
    select sum(num) from
      (select count(id) as num from details_text_back where auth_flag=0
       union all
       select count(id) as num from details_text_data where auth_flag=0
       union all
       select count(id) as num from details_text_front where auth_flag=0
       union all
       select count(id) as num from details_text_talk where auth_flag=0) as AuthCount
  </select>

    <select id="getAllPorts" resultMap="ResultPortMap">
        select id, port_title, is_essence,is_top, reply_number, look_number, create_time, auth_describe, auth_flag, class_id
        from (
        (select id, port_title, is_essence,is_top, reply_number, look_number, create_time, auth_describe, auth_flag,
        '1' as class_id from report_back
        where auth_flag = #{authFlag}  <include refid="PortQuery" />
        ORDER BY create_time DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, port_title, is_essence,is_top, reply_number, look_number, create_time, auth_describe,  auth_flag,
        '2' as class_id from report_front
        where auth_flag = #{authFlag}  <include refid="PortQuery" />
        ORDER BY create_time DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, port_title, is_essence,is_top, reply_number, look_number, create_time, auth_describe,  auth_flag,
        '3' as class_id from report_data
        where auth_flag = #{authFlag}  <include refid="PortQuery" />
        ORDER BY create_time DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, port_title, is_essence,is_top, reply_number, look_number, create_time, auth_describe,  auth_flag,
        '4' as class_id from report_talk
        where auth_flag = #{authFlag}  <include refid="PortQuery" />
        ORDER BY create_time DESC limit #{start},#{pageSize})
        ) as rt
    </select>

    <select id="getAllPortsReply" resultMap="ResultDetailsMap">
        select id, details_text, port_id,create_data, auth_describe, auth_flag, class_id
        from (
        (select id, details_text, port_id,create_data, auth_describe, auth_flag,
        '1' as class_id from details_text_back
        where auth_flag = #{authFlag}  <include refid="replyPortQuery" />
        ORDER BY create_data DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, details_text, port_id,create_data, auth_describe, auth_flag,
        '2' as class_id from details_text_front
        where auth_flag = #{authFlag}  <include refid="replyPortQuery" />
        ORDER BY create_data DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, details_text, port_id,create_data, auth_describe, auth_flag,
        '3' as class_id from details_text_data
        where auth_flag = #{authFlag}  <include refid="replyPortQuery" />
        ORDER BY create_data DESC limit #{start},#{pageSize})
        UNION ALL
        (select id, details_text, port_id,create_data, auth_describe, auth_flag,
        '4' as class_id from details_text_talk
        where auth_flag = #{authFlag}  <include refid="replyPortQuery" />
        ORDER BY create_data DESC limit #{start},#{pageSize})
        ) as rt
    </select>

    <select id="selectInvalidUsers" resultType="java.lang.String">
        select account from user where state = 0
    </select>

    <sql id="PortQuery">
        <if test="name != null and name != ''">
            and port_title like concat("%",#{name},"%")
        </if>
        <if test="beginTime != null and beginTime !='' ">
            and create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime !='' ">
            and create_time &lt;=  #{endTime}
        </if>
    </sql>

    <sql id="replyPortQuery">
        <if test="detailsText != null and detailsText != ''">
            and details_text like concat("%",#{detailsText},"%")
        </if>
        <if test="beginTime != null and beginTime !='' ">
            and create_data &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime !='' ">
            and create_data &lt;=  #{endTime}
        </if>
    </sql>

</mapper>